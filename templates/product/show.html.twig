{%extends 'index.html.twig' %}
{% block body %}
<div class="container-fluid py-5 wow fadeInUp" data-wow-delay="0.1s">
    <div class="container py-5">
        <div class="row g-5">
            <div class="col-lg-5">
                <div class="product-image-container bg-light rounded p-4">
                    <img src="{{ product.imageUrl ?: asset('img/maintenance.jpeg') }}" class="img-fluid rounded" alt="{{ product.name }}">
                </div>
            </div>
            <div class="col-lg-7">
                <div class="product-details">
                    <h1 class="mb-3">{{ product.name }}</h1>
                    <div class="d-flex mb-3">
                        <span class="text-primary fw-bold fs-4">${{ product.price|number_format(2, '.', ',') }}</span>
                        <span class="badge {{ product.stockQuantity > 0 ? 'bg-success' : 'bg-danger' }} ms-3 align-self-center">
                            {{ product.stockQuantity > 0 ? 'In Stock' : 'Out of Stock' }}
                        </span>
                    </div>

                    <p class="text-muted mb-2">Brand: {{ product.brand }}</p>
                    <p class="text-muted mb-2">Model: {{ product.model }}</p>
                    <p class="text-muted mb-2">Category: {{ product.category }}</p>

                    <div class="mb-4">
                        <h5>Description</h5>
                        <p>{{ product.description }}</p>
                    </div>

                    {% if product.stockQuantity > 0 %}
                    <div class="d-flex align-items-center mb-4">
                        <div class="input-group quantity-control me-3" style="width: 130px;">
                            <button class="btn btn-outline-primary quantity-decrease">-</button>
                            <input type="number" id="product-quantity" class="form-control text-center" value="1" min="1" max="{{ product.stockQuantity }}">
                            <button class="btn btn-outline-primary quantity-increase">+</button>
                        </div>
                        <button id="add-to-cart" class="btn btn-primary px-4" data-product-id="{{ product.id }}">
                            <i class="bi bi-cart-plus me-2"></i> Add to Cart
                        </button>
                    </div>
                    {% else %}
                    <div class="alert alert-warning">
                        <i class="bi bi-exclamation-triangle me-2"></i> This product is currently out of stock.
                    </div>
                    {% endif %}

                    <a href="{{ path('app_product_index') }}" class="btn btn-outline-secondary mt-3">
                        <i class="bi bi-arrow-left me-2"></i> Back to Products
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

{% if is_granted('ROLE_ADMIN') %}
<div class="container mb-5">
    <div class="card">
        <div class="card-header bg-light">
            <h5 class="mb-0">Admin Actions</h5>
        </div>
        <div class="card-body">
            <a href="{{ path('app_product_edit', {'id': product.id}) }}" class="btn btn-warning me-2">
                <i class="bi bi-pencil me-2"></i> Edit Product
            </a>
            {{ include('product/_delete_form.html.twig') }}
        </div>
    </div>
</div>
{% endif %}

{% endblock %}

{% block javascripts %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Handle quantity increase
    document.querySelector('.quantity-increase')?.addEventListener('click', function() {
        const input = document.getElementById('product-quantity');
        const currentValue = parseInt(input.value);
        const maxValue = parseInt(input.getAttribute('max'));

        if (currentValue < maxValue) {
            input.value = currentValue + 1;
        }
    });

    // Handle quantity decrease
    document.querySelector('.quantity-decrease')?.addEventListener('click', function() {
        const input = document.getElementById('product-quantity');
        const currentValue = parseInt(input.value);

        if (currentValue > 1) {
            input.value = currentValue - 1;
        }
    });

    // Handle manual quantity input
    document.getElementById('product-quantity')?.addEventListener('change', function() {
        let value = parseInt(this.value);
        const maxValue = parseInt(this.getAttribute('max'));

        if (isNaN(value) || value < 1) {
            value = 1;
        } else if (value > maxValue) {
            value = maxValue;
        }

        this.value = value;
    });

    // Handle add to cart
    document.getElementById('add-to-cart')?.addEventListener('click', function() {
        const productId = this.dataset.productId;
        const quantity = document.getElementById('product-quantity').value;

        fetch(`/cart/add/${productId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
                'X-Requested-With': 'XMLHttpRequest'
            },
            body: `quantity=${quantity}`
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Show success message
                const alertDiv = document.createElement('div');
                alertDiv.className = 'alert alert-success alert-dismissible fade show mt-3';
                alertDiv.innerHTML = `
                    <i class="bi bi-check-circle me-2"></i> Product added to cart!
                    <a href="{{ path('app_cart_index') }}" class="alert-link ms-2">View Cart</a>
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                `;

                document.querySelector('.product-details').appendChild(alertDiv);

                // Update cart count in navbar
                updateCartCount(data.cartCount);

                // Auto dismiss after 5 seconds
                setTimeout(() => {
                    alertDiv.classList.remove('show');
                    setTimeout(() => alertDiv.remove(), 150);
                }, 5000);
            }
        });
    });

    // Function to update cart count in navbar
    function updateCartCount(count) {
        const cartCountElement = document.querySelector('.cart-count');
        if (cartCountElement) {
            cartCountElement.textContent = count;

            // Show cart icon if it was hidden
            document.querySelector('.cart-icon-container').classList.remove('d-none');
        }
    }
});
</script>
{% endblock %}
